
<%
/**
 * OpenCPS is the open source Core Public Services software
 * Copyright (C) 2016-present OpenCPS community
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero General Public License for more details.
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */
%>


<%
	if(Validator.isNotNull(searchTerms.getKeywords()) || Validator.isNotNull(dossierSubStatus) || Validator.isNotNull(processOrderStage)){
		totalCount = ProcessOrderLocalServiceUtil.countProcessOrderKeyWords(serviceInfoId, processStepId, themeDisplay.getUserId(), assignToUserId, searchTerms.getKeywords(),dossierSubStatus, processOrderStage, fromDate, toDate, serviceDomainCode);
		processOrders = ProcessOrderLocalServiceUtil.searchProcessOrderKeyWords(serviceInfoId, processStepId, themeDisplay.getUserId(), assignToUserId, searchTerms.getKeywords(),dossierSubStatus, processOrderStage,
			fromDate, toDate, serviceDomainCode, searchContainer.getStart(), searchContainer.getEnd(), 
			ProcessOrderUtils.getProcessOrderByComparator(todolistOrderByField, todolistOrderByType));
	}else{
		totalCount = ProcessOrderLocalServiceUtil.countProcessOrder(serviceInfoId, processStepId, themeDisplay.getUserId(), assignToUserId);
		processOrders = ProcessOrderLocalServiceUtil.searchProcessOrder(serviceInfoId, processStepId, themeDisplay.getUserId(), assignToUserId,
			searchContainer.getStart(), searchContainer.getEnd(), 
			ProcessOrderUtils.getProcessOrderByComparator(todolistOrderByField, todolistOrderByType));
	}
%>